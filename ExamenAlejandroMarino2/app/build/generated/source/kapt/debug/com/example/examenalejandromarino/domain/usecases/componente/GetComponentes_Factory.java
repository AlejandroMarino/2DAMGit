// Generated by Dagger (https://dagger.dev).
package com.example.examenalejandromarino.domain.usecases.componente;

import com.example.examenalejandromarino.data.EquipoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetComponentes_Factory implements Factory<GetComponentes> {
  private final Provider<EquipoRepository> equipoRepositoryProvider;

  public GetComponentes_Factory(Provider<EquipoRepository> equipoRepositoryProvider) {
    this.equipoRepositoryProvider = equipoRepositoryProvider;
  }

  @Override
  public GetComponentes get() {
    return newInstance(equipoRepositoryProvider.get());
  }

  public static GetComponentes_Factory create(Provider<EquipoRepository> equipoRepositoryProvider) {
    return new GetComponentes_Factory(equipoRepositoryProvider);
  }

  public static GetComponentes newInstance(EquipoRepository equipoRepository) {
    return new GetComponentes(equipoRepository);
  }
}
